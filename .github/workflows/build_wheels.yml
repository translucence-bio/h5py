name: Build wheels for all platforms

on:
  push:
    branches:
      - zlib-ng
  workflow_dispatch: {}

env:
  AWS_ACCOUNT: "506429657129"
  AWS_REGION: us-west-2
  AWS_DOMAIN: production
  AWS_REPOSITORY: pypi
  AWS_ROLE: GitHubPublish-production-all-translucence-bio-h5py
  HDF5_VERSION: 1.12.3

jobs:
  build-wheels:
    name: 'Wheels: ${{ matrix.os }} ${{ matrix.arch }}'
    permissions:
      id-token: write
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-13 # intel
          - macos-14 #  arm
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/${{ env.AWS_ROLE }}
          role-session-name: h5py-build-${{ runner.os }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        run: python3 -m pip install twine requests

      # - name: "Windows: Display environment"
      #   if: runner.os == 'Windows'
      #   run: "ls env:"

      # - name: "Unix: Display environment"
      #   if: runner.os != 'Windows'
      #   run: env

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.1
        env:
          CIBW_BUILD: cp310-* cp311-* cp312-*
          CIBW_SKIP: "*musllinux*"
          CIBW_ARCHS: native
          CIBW_ENVIRONMENT_WINDOWS: ZLIB_ROOT="$USERPROFILE\\zlib-ng-install" HDF5_DIR="$USERPROFILE\\hdf5-install"
          CIBW_ENVIRONMENT_LINUX: HDF5_DIR="$HOME/hdf5-install" LD_FLAGS="-L$HOME/hdf5-install/lib" LD_LIBRARY_PATH="$HOME/hdf5-install/lib"
          CIBW_ENVIRONMENT_MACOS: HDF5_DIR="$HOME/hdf5-install" LD_FLAGS="-L$HOME/hdf5-install/lib" LD_LIBRARY_PATH="$HOME/hdf5-install/lib"
          CIBW_ENVIRONMENT_PASS_LINUX: HDF5_VERSION
          CIBW_BEFORE_ALL_WINDOWS: |
            pwsh -command ". ci\get_zlib_win.ps1 && python ci\get_hdf5_win.py"
          CIBW_BEFORE_ALL_LINUX: |
            ci/build_zlib.sh &&
            ci/get_hdf5_if_needed.sh &&
            patchelf --set-rpath $HDF5_DIR/lib $HDF5_DIR/lib/libhdf5.so
          CIBW_BEFORE_ALL_MACOS: |
            ci/build_zlib.sh &&
            ci/get_hdf5_if_needed.sh
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: |
            pwsh -command ". Copy-Item {wheel} {dest_dir} && python ci/bundle_hdf5_whl.py {dest_dir}"

          # Hack to exclude zlib from whitelist in auditwheel
          CIBW_BEFORE_BUILD_LINUX: |
            python -m pip install auditwheel &&
            python ci/patch_auditwheel_policies.py
        with:
          package-dir: .
          output-dir: wheelhouse

      - name: Publish
        continue-on-error: true
        run: |
          aws codeartifact login --tool twine --domain ${{ env.AWS_DOMAIN }} --repository ${{ env.AWS_REPOSITORY }} &&
          twine upload --repository codeartifact wheelhouse/h5py-*
