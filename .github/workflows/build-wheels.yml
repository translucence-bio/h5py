name: Build wheels for all platforms

on:
  push:
    branches:
    - feat/zlib-ng
  pull_request:
    branches:
    - master
  workflow_dispatch: {}

env:
  HDF5_VERSION: 1.12.2
  CIBW_BUILD: cp310-*
  CIBW_ARCHS: native
  CIBW_ENVIRONMENT_WINDOWS: ZLIB_ROOT="$HOMEPATH\\zlib-ng-install HDF5_DIR="$HOMEPATH\\hdf5-install"
  CIBW_ENVIRONMENT_LINUX: HDF5_DIR="$HOME/hdf5-install" LD_LIBRARY_PATH="$HOME/hdf5-install/lib:$LD_LIBRARY_PATH"
  CIBW_ENVIRONMENT_PASS_LINUX: HDF5_VERSION
  CIBW_BEFORE_ALL_WINDOWS: |
    powershell ci\\get_zlib_win.ps1 &&
    python ci\\get_hdf5_win.py
  CIBW_BEFORE_ALL_LINUX: |
    yum install wget -y &&
    ci/build_zlib.sh &&
    ci/get_hdf5_if_needed.sh

jobs:
  build-wheels:
    name: Build Wheels
    strategy:
      matrix:
        os:
        - [self-hosted, ubuntu-20.04]
        - [self-hosted, windows-10]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.4"

      - name: Install Python dependencies
        run: |
          python3 -m pip install cibuildwheel==2.3.1 requests

      - name: "Windows: Display environment"
        if: runner.os == 'Windows'
        run: "ls env:"

      - name: "Unix: Display environment"
        if: runner.os != 'Windows'
        run: env

      - name: Build wheel
        shell: bash
        run: |
          set -o errexit
          cibuildwheel --print-build-identifiers
          cibuildwheel --output-dir wheelhouse .
          python ci/bundle_hdf5_whl.py wheelhouse

      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}_wheels
          path: wheelhouse

